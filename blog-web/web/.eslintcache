[{"E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\index.tsx":"1","E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\reportWebVitals.ts":"2","E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\App.tsx":"3","E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\components\\article\\index.tsx":"4","E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\api\\article.ts":"5","E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\utils\\request.ts":"6"},{"size":1048,"mtime":1611562153269,"results":"7","hashOfConfig":"8"},{"size":440,"mtime":1611543308537,"results":"9","hashOfConfig":"8"},{"size":710,"mtime":1611561963252,"results":"10","hashOfConfig":"8"},{"size":1199,"mtime":1611561221303,"results":"11","hashOfConfig":"8"},{"size":280,"mtime":1611554706104,"results":"12","hashOfConfig":"8"},{"size":183,"mtime":1611543308540,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"335p04",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\index.tsx",["28"],"E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\reportWebVitals.ts",[],"E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\App.tsx",["29"],"E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\components\\article\\index.tsx",["30"],"import React from \"react\";\r\nimport { List, Avatar } from \"antd\";\r\nimport { fetchList } from \"../../api/article\";\r\nimport { ArticleList as ArticleListDefinition } from \"../../model/article\";\r\n\r\ninterface IProps {\r\n  size?: 10;\r\n  data?: ArticleListDefinition[];\r\n}\r\n\r\ninterface IState {\r\n  data: ArticleListDefinition[];\r\n}\r\n\r\nclass ArticleList extends React.Component<IProps, IState, {}> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.data || [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchList({})\r\n      .then((res) => {\r\n        this.setState({ data: res.data });\r\n      })\r\n      .catch((e) => alert(\"发生了错误\" + e));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"articleContainer\">\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={this.state.data}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                title={<a href=\"https://ant.design\">{item.Topic}</a>}\r\n                description={item.Thumbnail}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        ></List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArticleList;\r\n",["31","32"],"E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\api\\article.ts",[],"E:\\Projects\\project-github\\little-blog\\blog-web\\web\\src\\utils\\request.ts",[],{"ruleId":"33","severity":1,"message":"34","line":7,"column":7,"nodeType":"35","messageId":"36","endLine":7,"endColumn":18},{"ruleId":"33","severity":1,"message":"37","line":4,"column":9,"nodeType":"35","messageId":"36","endLine":4,"endColumn":15},{"ruleId":"33","severity":1,"message":"38","line":2,"column":16,"nodeType":"35","messageId":"36","endLine":2,"endColumn":22},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},"@typescript-eslint/no-unused-vars","'routeConfig' is assigned a value but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Avatar' is defined but never used.","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-global-assign","no-unsafe-negation"]